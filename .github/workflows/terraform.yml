name: Terraform GCP Deployment

on:    
  workflow_dispatch:
    inputs:
      environment:
        description: 'Wybierz środowisko (production)'
        required: false
        default: 'production'

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: production
    concurrency: # zapobiega równoczesnemu uruchomieniu
      group: terraform-gcp-lock
      cancel-in-progress: false

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.0

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform

      - name: Terraform Plan
        run: |
          terraform plan \
            -out=tfplan \
            -var="project_id=${{ secrets.PROJECT_ID }}" \
            -var="region=${{ secrets.REGION }}" \
            -var="db_user=${{ secrets.DB_USER }}" \
            -var="db_password=${{ secrets.DB_PASSWORD }}" \
            -var="db_name=${{ secrets.DB_INSTANCE_NAME }}"
        working-directory: ./terraform

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
        working-directory: ./terraform
  
  build-and-push:
    needs: terraform
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Build and Push Docker Image to Artifact Registry
        run: |
          SHORT_SHA=$(echo "${{ github.sha }}" | cut -c1-7)
          IMAGE_NAME="secure-django"
          REGION="${{ secrets.REGION }}"
          PROJECT_ID="${{ secrets.PROJECT_ID }}"
          REPO_NAME="app-container-repo"
          IMAGE_PATH="${REGION}-docker.pkg.dev/${PROJECT_ID}/${REPO_NAME}/${IMAGE_NAME}"

          echo "Building Docker image..."
          docker build -t ${IMAGE_NAME}:${{ github.sha }} .

          echo "Tagging Docker image..."
          docker tag ${IMAGE_NAME}:${{ github.sha }} ${IMAGE_PATH}:${SHORT_SHA}
          docker tag ${IMAGE_NAME}:${{ github.sha }} ${IMAGE_PATH}:latest

          echo "Authenticating Docker to Artifact Registry..."
          gcloud auth configure-docker ${REGION}-docker.pkg.dev --quiet

          echo "Pushing Docker image..."
          docker push ${IMAGE_PATH}:${SHORT_SHA}
          docker push ${IMAGE_PATH}:latest
     